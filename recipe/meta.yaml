{% set author = "open-telemetry" %}
{% set name = "opentelemetry" %}
{% set version = "1.12.0" %}
{% set sha256 = "305c72387ee98b4646c6933fc43e25c5da662cb31b3fee87972713f40b492b6d" %}

{% set deprecated_dep = "deprecated >=1.2.6" %}
{% set protobuf_dep   = "protobuf >=3.13,<4.0a0" %}
{% set grpcio_dep     = "grpcio >=1.0.0,<2.0.0a0" %}
{% set googleapis_dep = "googleapis-common-protos >=1.52,<1.56.3" %}
{% set requests_dep   = "requests >=2.7,<3.0.0a0" %}
{% set backoff_dep    = "backoff >=1.10.0,<3.0.0a0" %} # [py>=37]
{% set backoff_dep    = "backoff >=1.10.0,<2.0.0a0" %} # [py<37]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ author }}/{{ name }}-python/archive/refs/tags/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  skip: true # [py<36 or s390x]

outputs:
  - name: {{ name }}-api
    build:
      script: cd opentelemetry-api && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - aiocontextvars # [py<37]
        - {{ deprecated_dep }}
    test:
      imports:
        - opentelemetry
        - opentelemetry.attributes
        - opentelemetry.baggage
        - opentelemetry.context
        - opentelemetry.metrics
        - opentelemetry.propagate
        - opentelemetry.propagators
        - opentelemetry.trace
        - opentelemetry.util
        - opentelemetry.environment_variables
        - opentelemetry.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-sdk
    build:
      script: cd opentelemetry-sdk && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-semantic-conventions', exact=True) }}
        - dataclasses ==0.8  # [py<3.7]
        - typing-extensions >=3.7.4
    test:
      imports:
        - opentelemetry.sdk
        - opentelemetry.sdk.error_handler
        - opentelemetry.sdk.metrics
        - opentelemetry.sdk.resources
        - opentelemetry.sdk.trace
        - opentelemetry.sdk.util
        - opentelemetry.sdk.environment_variables
        - opentelemetry.sdk.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-proto
    build:
      script: cd opentelemetry-proto && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ protobuf_dep }}
    test:
      imports:
        - opentelemetry.proto
        - opentelemetry.proto.collector
        - opentelemetry.proto.common
        - opentelemetry.proto.metrics
        - opentelemetry.proto.resource
        - opentelemetry.proto.trace
        - opentelemetry.proto.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-semantic-conventions
    build:
      script: cd opentelemetry-semantic-conventions && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
    test:
      imports:
        - opentelemetry.semconv
        - opentelemetry.semconv.resource
        - opentelemetry.semconv.trace
        - opentelemetry.semconv.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-jaeger-proto-grpc
    build:
      script: cd exporter/opentelemetry-exporter-jaeger-proto-grpc && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ grpcio_dep }}
        - {{ googleapis_dep }}
    test:
      imports:
        - opentelemetry.exporter.jaeger.proto.grpc
        - opentelemetry.exporter.jaeger.proto.grpc.gen
        - opentelemetry.exporter.jaeger.proto.grpc.send
        - opentelemetry.exporter.jaeger.proto.grpc.translate
        - opentelemetry.exporter.jaeger.proto.grpc.util
        - opentelemetry.exporter.jaeger.proto.grpc.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-jaeger-thrift
    build:
      script: cd exporter/opentelemetry-exporter-jaeger-thrift && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - thrift >=0.10.0
    test:
      imports:
        - opentelemetry.exporter.jaeger.thrift
        - opentelemetry.exporter.jaeger.thrift.gen
        - opentelemetry.exporter.jaeger.thrift.translate
        - opentelemetry.exporter.jaeger.thrift.send
        - opentelemetry.exporter.jaeger.thrift.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-jaeger
    build:
      script: cd exporter/opentelemetry-exporter-jaeger && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-exporter-jaeger-proto-grpc', exact=True) }}
        - {{ pin_subpackage(name + '-exporter-jaeger-thrift', exact=True) }}
    test:
      imports:
        - opentelemetry.exporter.jaeger.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-opencensus
    build:
      script: cd exporter/opentelemetry-exporter-opencensus && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ grpcio_dep }}
        - {{ protobuf_dep }}
        - opencensus-proto >=0.1.0,<1.0.0a0
    test:
      imports:
        - opentelemetry.exporter.opencensus
        - opentelemetry.exporter.opencensus.trace_exporter
        - opentelemetry.exporter.opencensus.util
        - opentelemetry.exporter.opencensus.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-otlp-proto-grpc
    build:
      script: cd exporter/opentelemetry-exporter-otlp-proto-grpc && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ pin_subpackage(name + '-proto', exact=True) }}
        - {{ grpcio_dep }}
        - {{ googleapis_dep }}
        - {{ backoff_dep }}
    test:
      imports:
        - opentelemetry.exporter.otlp.proto.grpc
        - opentelemetry.exporter.otlp.proto.grpc.metric_exporter
        - opentelemetry.exporter.otlp.proto.grpc.trace_exporter
        - opentelemetry.exporter.otlp.proto.grpc.exporter
        - opentelemetry.exporter.otlp.proto.grpc.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-otlp-proto-http
    build:
      script: cd exporter/opentelemetry-exporter-otlp-proto-http && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ pin_subpackage(name + '-proto', exact=True) }}
        - {{ requests_dep }}
        - {{ googleapis_dep }}
        - {{ backoff_dep }}
    test:
      imports:
        - opentelemetry.exporter.otlp.proto.http
        - opentelemetry.exporter.otlp.proto.http.trace_exporter
        - opentelemetry.exporter.otlp.proto.http.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-otlp
    build:
      script: cd exporter/opentelemetry-exporter-otlp && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-exporter-otlp-proto-grpc', exact=True) }}
        - {{ pin_subpackage(name + '-exporter-otlp-proto-http', exact=True) }}
    test:
      imports:
        - opentelemetry.exporter.otlp.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-prometheus
    build:
      script: cd exporter/opentelemetry-exporter-prometheus && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - prometheus_client >=0.5.0,<1.0.0
    test:
      imports:
        - opentelemetry.exporter.prometheus
        - opentelemetry.exporter.prometheus.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-zipkin-json
    build:
      script: cd exporter/opentelemetry-exporter-zipkin-json && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ requests_dep }}
    test:
      imports:
        - opentelemetry.exporter.zipkin
        - opentelemetry.exporter.zipkin.encoder
        - opentelemetry.exporter.zipkin.json
        - opentelemetry.exporter.zipkin.node_endpoint
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-zipkin-proto-http
    build:
      script: cd exporter/opentelemetry-exporter-zipkin-proto-http && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - {{ pin_subpackage(name + '-exporter-zipkin-json', exact=True) }}
        - {{ protobuf_dep }}
        - {{ requests_dep }}
    test:
      imports:
        - opentelemetry.exporter.zipkin.proto.http
        - opentelemetry.exporter.zipkin.proto.http.v2
        - opentelemetry.exporter.zipkin.proto.http.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-exporter-zipkin
    build:
      script: cd exporter/opentelemetry-exporter-zipkin && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-exporter-zipkin-json', exact=True) }}
        - {{ pin_subpackage(name + '-exporter-zipkin-proto-http', exact=True) }}
    test:
      imports:
        - opentelemetry.exporter.zipkin.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-shim
    build:
      script: cd shim/opentelemetry-opentracing-shim && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ deprecated_dep }}
        - opentracing >=2.0,<3.0.0a0
    test:
      imports:
        - opentelemetry.shim.opentracing_shim
        - opentelemetry.shim.opentracing_shim.util
        - opentelemetry.shim.opentracing_shim.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-propagator-b3
    build:
      script: cd propagator/opentelemetry-propagator-b3 && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ deprecated_dep }}
    test:
      imports:
        - opentelemetry.propagators.b3
        - opentelemetry.propagators.b3.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-propagator-jaeger
    build:
      script: cd propagator/opentelemetry-propagator-jaeger && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
    test:
      imports:
        - opentelemetry.propagators.jaeger
        - opentelemetry.propagators.jaeger.version
      commands:
        - pip check
      requires:
        - pip
  - name: {{ name }}-test-utils
    build:
      script: cd tests/opentelemetry-test-utils && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage(name + '-api', exact=True) }}
        - {{ pin_subpackage(name + '-sdk', exact=True) }}
        - asgiref >=3.0,<4.0.0a0
    test:
      imports:
        - opentelemetry.test.asgitestutil
        - opentelemetry.test.concurrency_test
        - opentelemetry.test.globals_test
        - opentelemetry.test.httptest
        - opentelemetry.test.metrictestutil
        - opentelemetry.test.mock_textmap
        - opentelemetry.test.spantestutil
        - opentelemetry.test.test_base
        - opentelemetry.test.version
        - opentelemetry.test.wsgitestutil
      commands:
        - pip check
      requires:
        - pip

about:
  summary: OpenTelemetry Python
  home: https://github.com/open-telemetry/opentelemetry-python/tree/main/exporter/opentelemetry-exporter-otlp-proto-http
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  doc_url: https://opentelemetry-python.readthedocs.io/
  doc_source_url: https://github.com/open-telemetry/opentelemetry-python/tree/main/docs
  dev_url: https://github.com/open-telemetry/opentelemetry-python
  description: |-
    OpenTelemetry, also known as OTel for short, is a vendor-neutral open-source
    Observability framework for instrumenting, generating, collecting, and exporting
    telemetry data such as traces, metrics, logs. As an industry-standard
    it is natively supported by a number of vendors.

extra:
  recipe-maintainers:
    - mariusvniekerk
    - mcg1969
